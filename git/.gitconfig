# ~/.gitconfig

# FYI: You can use GIT_TRACE=1 for debugging. Example:
#
# ~/p/foo (PLAT-13732) $ GIT_TRACE=1 g dhh 2 1
# 15:40:09.706286 git.c:730               trace: exec: git-dhh 2 1
# 15:40:09.706550 run-command.c:664       trace: run_command: git-dhh 2 1
# 15:40:09.707858 run-command.c:664       trace: run_command: 'git diff HEAD~$1..HEAD~$2 && true' 2 1
# 15:40:09.716628 git.c:444               trace: built-in: git diff 'HEAD~2..HEAD~1'
# 15:40:09.721815 run-command.c:664       trace: run_command: unset GIT_PAGER_IN_USE; LESS=FRX LV=-c less

[user]
	name = Samuli Suomi
	email = 3490745+samulisuomi@users.noreply.github.com

[alias]
	a = add
	all = add --all
	b = branch
	cm = commit
	cma = commit --amend
	cmm = commit -m
	co = checkout
	d = diff
	dh = "!git diff HEAD~$1 && true"
	dhh = "!git diff HEAD~$1..HEAD~$2 && true"
	email = config user.email
	f = fetch
	l = log
	mrg = merge
	pl = pull
	ps = push
	psf = push --force-with-lease
	rb = rebase
	rbi = rebase -i
	rbih = "!git rebase -i HEAD~$1 && true"
	recent = !git reflog show --pretty=format:'%gs ~ %gd' --date=relative | grep 'checkout:' | grep -oE '[^ ]+ ~ .*' | awk -F~ '!seen[$1]++' | head -n 10 | awk -F' ~ HEAD@{' '{printf(\"  \\033[33m%s: \\033[37m %s\\033[0m\\n\", substr($2, 1, length($2)-1), $1)}' # https://ses4j.github.io/2020/04/01/git-alias-recent-branches/
	rs = reset
	rsh = reset HEAD~
	s = status
	st = stash
	sts = stash save # "name"
